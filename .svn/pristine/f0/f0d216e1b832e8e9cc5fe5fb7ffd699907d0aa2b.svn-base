// 组装模块并导出 store

import Vue from 'vue'
import Vuex from 'vuex'
import Tool from './tool.js' // 工具方法
import Dev from './dev.js' //   本地开发代码
import Prod from './prod.js' // 生产环境代码
Vue.use(Vuex)

const store = new Vuex.Store({
  modules: {},

  state: {
    nowCodeType: 'Prod', //     当前代码类型
    codeObj: { Dev, Prod }, // 代码类型 { Dev: '开发', Prod: '生产' }
    /* 缓存数据 */
    pageType: '', //           页面（甘特表）类型: '1', '2'...
    pageTitle: '', //          页面（甘特表）类型: '大货', '开发', '面料'
    /* 第一页 */
    itemids: '', //            所有项目id
    projectList: [], //        项目列表
    nodeMapList: [], //        节点列表
    /* 第二页 */
    showTableArr: [], //       展示的表格列表
    isComputed_2: true, //     是否触发：计算第二页数据
    next_itemMapList: [], //   项目节点信息
    next_nodeMapList: [], //   表头节点信息
    /* 计算依据 */
    changeIndexId: '' //       修改的数据索引及节点ID '4_2c9xadw244'
  },

  getters: {
    /**
     * [第二页数据]
     * @page 第二页
     */
    next_list(state) {
      const { next_itemMapList, isComputed_2, changeIndexId, pageTitle } = state
      if (isComputed_2) {
        const arr = Tool.next_list(next_itemMapList, isComputed_2, changeIndexId, pageTitle)
        state.isComputed_2 = false
        // console.log('第二页计算数据 ----- ', arr)
        return arr
      }
    },
    /**
     * [所有项目名称]
     */
    itenames(state) {
      const { projectList } = state
      const strArr = []
      projectList.forEach(function (item) {
        strArr.push(item.item_name)
      })
      return strArr.join(',')
    }
  },

  mutations: {
    /**
     * [保存数据]
     * @param {[String]} name 属性名
     * @param {[Object]} obj  属性值
     */
    saveData(state, params) {
      const { name, obj } = params
      state[name] = obj
    }
  },

  actions: {
    /**
     * [请求：页面初始化数据]
     * @page 第一页
     */
    A_getItemNodeTemple({ state }, { status = '初始化', loadingIds = '', that = {} }) {
      state.codeObj[state.nowCodeType].A_getItemNodeTemple(state, status, loadingIds, that)
    },
    /**
     * [请求：下一步]
     * @page 第一页
     */
    A_generateItemGanttSummary({ state }, { that }) {
      state.codeObj[state.nowCodeType].A_generateItemGanttSummary(state, that)
    },
    /**
     * [请求：暂存、提交]
     * @page 第二页
     */
    A_itemCustomNode({ state }, { audit_status, that }) {
      state.codeObj[state.nowCodeType].A_itemCustomNode(state, audit_status, that)
    }
  }
})

export default store
